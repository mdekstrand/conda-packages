{% set version = '0.9-04' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-dotcall64
  version: {{ version|replace("-", "_") }}

source:
  fn: dotCall64_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/dotCall64_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_{{ version }}.tar.gz


  sha256: 0e65a56c836aecd02380d9033989a05e391552eb6b3a9d16504a827b9faae662
  # patches:
   # List any patch files here
   # - fix.patch

build:
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: microbenchmark, OpenMPController, RColorBrewer, roxygen2, spam, testthat,
requirements:
  build:
    - r-base
    - posix                # [win]
    - {{native}}toolchain  # [win]
    - {{compiler('c')}}                  # [not win]
    - {{compiler('fortran')}} # [not win]

  run:
    - r-base
    - {{native}}gcc-libs   # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('dotCall64')"  # [not win]
    - "\"%R%\" -e \"library('dotCall64')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://git.math.uzh.ch/reinhard.furrer/dotCall64
  license: GPL (>= 2)
  summary: An alternative version of .C() and .Fortran() supporting long vectors and 64-bit integer
    type arguments. The provided interface .C64() features mechanisms the avoid unnecessary
    copies of read-only or write-only arguments. This makes it a convenient and fast
    interface to C/C++ and Fortran code.
  license_family: GPL3

# The original CRAN metadata for this package was:

# Package: dotCall64
# Type: Package
# Title: Enhanced Foreign Function Interface Supporting Long Vectors
# Version: 0.9-04
# Date: 2016-10-03
# Authors@R: c(person("Kaspar", "Moesinger", role = c("aut", "cre"), email = "kaspar.moesinger@gmail.com"), person("Florian", "Gerber", role = "ctb", email = "florian.gerber@math.uzh.ch"), person("Reinhard", "Furrer", role = "ctb", email = "reinhard.furrer@math.uzh.ch"))
# Author: Kaspar Moesinger [aut, cre], Florian Gerber [ctb], Reinhard Furrer [ctb]
# Maintainer: Kaspar Moesinger <kaspar.moesinger@gmail.com>
# Description:  An alternative version of .C() and .Fortran() supporting long vectors and 64-bit integer type arguments. The provided interface .C64() features mechanisms the avoid unnecessary copies of read-only or write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code.
# License: GPL (>= 2)
# URL: https://git.math.uzh.ch/reinhard.furrer/dotCall64
# BugReports: https://git.math.uzh.ch/reinhard.furrer/dotCall64/issues
# Depends: R (>= 3.1)
# Suggests: microbenchmark, OpenMPController, RColorBrewer, roxygen2, spam, testthat,
# Collate: 'vector_dc.R' 'dotCall64.R' 'zzz.R'
# NeedsCompilation: yes
# Packaged: 2016-10-06 20:49:44 UTC; moe
# Repository: CRAN
# Date/Publication: 2016-10-07 09:19:26

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
